learn python automation

emzor
skg
vixa
sfh
greenlife
juhel
biofem
sanofi
swipha
chi pharma
vitabiotics
bond chemical
bayer
adams desire
reals
vitane
servier

each orderitem has a reference to an OFFER,CONTRACT,SHIPPINGMODE,FFMCENTER
application,initialization,combination,qualification,calculation,lookup,summarization,finalization

initializecalculationusage
applycalculationusage
calculationcodeapply
calculationcodecombine
calculationcodequalify
calculationcodecalculate
calculationrulecombine
calculationrulequalify
calculationrulecalculate
monetarycalculationscalelookup
quantitycalculationscalelookup
calculationrange
summarizecalculationusage
finalizecalculationusage


initializecalculationusage - STENCAL
applycalculationusage - STENCAL
	calculationcodecombine - STENCAL
		calculationcodequalify - CALCODE
	calculationcodecalculate - CALCODE
		calculationrulecombine - STENCAL
			calculationrulequalify
			calculationrulecalculate
				calculationscalelookup
				calculationrange
	calculationcodeapply - CALCODE
summarizecalculationusage
finalizecalculationusage



LOGISTICS
from 1-10k - #500 (old charge)
from 1-100k - #2000 (new charge) within lagos
anything above 100k
	if syrups are plenty (increased weight)
	charge 5000 or 3500 depending on weight.
upcountries - kaduna, abuja, 3500 for 1-100k
ibadan and lagos are the same

revenue,expenses,asset,liability,equity,
REVENUE
4000 - sales
4060 - interest income
4900 - sales discounts

EXPENSES
6100 - auto expenses
6200 - bank fees
6550 - freight expense
6900 - licenses expense
7050 - meals and entertainment expense
7550 - supplies expense
6750 - interest expense
6710 - insurance expense
6400 - depreciation expense
6550 - income taxes - federal
6660 - income taxes - state
6670 - income taxes - local

COST OF GOODS SOLD
5800 - cost of goods sold
5100 - direct labor costs

ASSET
1520 - vehicles - fixed
1000 - cash - current
1205 - supplies - current
1510 - equipment - fixed
1420 - notes receivable - current
1100 - accounts receivable - current
1400 - prepaid insurance - current

LIABILITY
2708 - interest payable - long-term liabilities
2700 - notes payable / loan payable - long-term liabilities
2000 - accounts payable - current liabilities
2310 - sales tax payable - current liabilities
2320 - wages payable - current liabilities
2440 - unearned revenue / deferred revenues / customer deposits - current liabilities

EQUITY
3010 - common stock
3020 - paid-in capital in excess of par value-common stock
3030 - preferred stock
3040 - retained earnings
3050 - accumulated other comprehensive income,
3060 - treasury stock
3070 - current year's net income



TRADING - CUSTOMER ACCOUNT	ACCOUNT
trdtype_id - account:0		name
state - inactive:0 | active:1	member_id:owner
starttime - timestamp_now	store_id
endtime - timestamp_set		state: initial:0 | active:3 | closed:6
creditallowed - no:0 | yes:1	currency
language_id			comments
timecreated			timecreated
timeupdated			timeupdated
				timeapproved
				timeactivated

TRADING - PROCUREMENT CONTRACT	CONTRACT
trdtype_id - contract:1		name
state - inactive:0 | active:1	member_id - owner
starttime - timestamp_now	origin - manual:0 | imported:1 | RFQ:2 | exchange:3 | auction:4 | 2-party negotiation:5 | deployment:6
endtime - timestamp_set		state - draft:0 | pending approval:1 | approved:2 | active:3 | rejected:4 | canceled:5 | closed:6 | suspended:7
creditallowed - no:0 | yes:1	usage - default:0 | org buyer:1 | reseller:2 | special bid:3 | referral:4 | supplier:5
language_id			comments
timecreated			timecreated
timeupdated			timeupdated
				timeapproved
				timeactivated
				timedeployed
				store_id - storecntr

a merchant account is a type of bank account that allows businesses to accept payments
by debit or credit cards. so a merchant account is an agreement between a retailer, 
a merchant bank and payment processor for the settlement of credit and/or debit card
transactions.

when a customer pays for a product or service, the funds are first deposited into the 
merchant account and from there funds are eventually transferred to the business bank
account. transfers to the business account are normally done on a daily or weekly basis

an order is an object that is created as a result of a data flow between a buyer and a 
merchant and the financial institution during the order life cycle. these transactions
can be broken into two broad categories: PAYMENTS(monies transferred to the merchant from
the consumer), and CREDITS(monies returned to the buyer, such as when merchandise is defective).
As processing on an order continues, payment and credit objects are created, modified and destroyed.

another type of object used is a BATCH object. which represents multiple transactions processed
as a group, such as the deposit of all payments at the end of a business day. batch objects keep
track of the collections of transactions. for instance, if a financial institution tells the merchant
to close out the week's transactions, the merchant will close the current batch and open a new one.
batch objects for these two atches will reflect the new status of the batches.


1. at order submission, the ProcessOrder command calls the PrimePayment cmd to process payment since 
the order total amount needs to be processed. customize the getinitialamount method of ProcessOrder to get the total amount of this order.

2. the payment subsystem pre-processes payment and returns a shipment confirmation.

3. when the shipment confirmation is received, the order related info is udpdated.
the payment of order items to be shipped needs to be captured at this phase.
	a.command to update order related information
	b.in this command call ReservePayment and FinalizePayment to capture payment for this order
		to be shipped
		1. reservepayment - setorderid(orders_id)
				  - setreleases(shipmentlist) -> has map of all orderitems to ship rn
					its key is shipment id and value is totalamount
				  - setreservationamount(dshipmenttotal)
				  - execute()
		2. finalizepayment - setorderid(orders_id)
				   - setreleaseid(shipment_id)
				   - setfinalizationamount(shipmentamount)
				   - execute()


PAYMENT LIFE CYCLE - there are three stages to payment processing:VALIDATION, RESERVATION, and FINALIZATION. the payment
lifecycle is related to the order life cycle stages: ORDER CAPTURE, RELEASE to FFM and SHIPPING.
VALIDATION - ensures that a customer has adequate funds to make the purchase. the payment action depends on the customer's
		payment method. for instance when a customer pays for a purchase order using a credit card, a credit card
		authorization is sent and if it is valid, the transaction is approved. this process occurs during the order 
		submission.

RESERVATION - ensures that funds are available before shipment of the goods. the reservation amount is the sum of all 
		order release amounts. this process occurs during a release to fulfillment.

FINALIZATION - payment finalization is typically driven by a shipment confirmation message from or on behalf of the fulfiller.
		this process occurs when the goods are shipped for the order release.
		an order can have multiple releases if items in the order must be shipped from different warehouses or use
		different carriers. or if some of the items need to arrive at different times, such as for an expedited item.
		additionally, a customer can group order items in the same order to ship together including backordered items
		or future shipments.

PaymentMethodsDisplay.jsp
	Displays, on the store's checkout page, a list of the available payment methods available 		for use in a drop-down list. The payment methods are derived from the POLICY database table.
StandardCOD.jsp
	Displays entry fields to collect information for the Cash on Delivery payment method: first
	name, last name, delivery address, city, state/province, zip/postal code, country (region),
	and phone.
StandardLOC.jsp
	Displays entry fields to collect information for the Line of Credit payment method: account
	number, PO number, order ID.

PaymentMethods
	PaymentRules - define actions needed to move a payment from current to target states

PAYMENTS SUBSYSTEM ARCH
	Payment Rules Engine
	Payment Plug-In Controller
	Payment Plug-Ins


##################################################################################################################################
################################################ RESTART PROTOCOL ################################################################
##################################################################################################################################
delete from member
alter sequence calmethod_calmethod_id_seq restart with 1;

